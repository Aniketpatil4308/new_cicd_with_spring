name: spring boot CI demo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v3

      - name: ✅ Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: ✅ Run Build
        run: mvn clean install -DskipTests

      - name: 📤 Upload JAR as artifact
        uses: actions/upload-artifact@v4
        if: github.event_name == 'pull_request'


        with:
          name: springboot-jar
          path: target/*.jar


  ################################
  # 🚀 JOB 2: Docker Deployment
  ################################
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'


    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v3

      - name: 📥 Download JAR from build job
        uses: actions/download-artifact@v4
        with:
          name: springboot-jar

      - name: 🐳 Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🔧 Build Docker image
        run: |
          JAR_FILE=$(ls *.jar)
          docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest --build-arg JAR_FILE=$JAR_FILE .

      - name: 📤 Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest
